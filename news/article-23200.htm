<!doctype html>
<html class="no-js" lang="zh-CN">

<head>
        <link rel="canonical" href="https://clashxnode.github.io/news/article-23200.htm" />
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>vuex配置项、多组件数据共享案例详解</title>
        <meta name="description" content="文章目录  getters 配置项 mapState、mapGetters mapActions、mapMutations 多组件共享数据    没有看过上一篇的同学可以查看：Vue Vuex学习(搭" />
        <link rel="icon" href="__ADDON__/img/clashxnode/favicon.ico" type="image/x-icon"/>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- CSS here -->
    <link rel="stylesheet" href="/assets/website/css/clashxnode/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/css/clashxnode/animate.min.css">
    <link rel="stylesheet" href="/assets/website/css/clashxnode/magnific-popup.css">
    <link rel="stylesheet" href="/assets/website/css/clashxnode/fontawesome-all.min.css">
    <link rel="stylesheet" href="/assets/website/css/clashxnode/owl.carousel.min.css">
    <link rel="stylesheet" href="/assets/website/css/clashxnode/flaticon.css">
    <link rel="stylesheet" href="/assets/website/css/clashxnode/odometer.css">
    <link rel="stylesheet" href="/assets/website/css/clashxnode/aos.css">
    <link rel="stylesheet" href="/assets/website/css/clashxnode/slick.css">
    <link rel="stylesheet" href="/assets/website/css/clashxnode/default.css">
    <link rel="stylesheet" href="/assets/website/css/clashxnode/style.css">
    <link rel="stylesheet" href="/assets/website/css/clashxnode/responsive.css">
    
<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-0ENMRSJ9N6"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-0ENMRSJ9N6');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- preloader -->
    <div id="preloader">
        <div id="loading-center">
            <div class="loader">
                <div class="loader-outter"></div>
                <div class="loader-inner"></div>
            </div>
        </div>
    </div>
    <!-- preloader-end -->
    <!-- Scroll-top -->
    <button class="scroll-top scroll-to-target" data-target="html">
        <i class="fas fa-angle-up"></i>
    </button>
    <!-- Scroll-top-end-->
    <!-- header-area -->
    <header>
        <div id="sticky-header" class="main-header menu-area">
            <div class="container custom-container">
                <div class="row">
                    <div class="col-12">
                        <div class="mobile-nav-toggler"><i class="fas fa-bars"></i></div>
                        <div class="menu-wrap">
                            <nav class="menu-nav show">
                                <div class="logo">
                                                                        <a href="/">
                                        <span>ClashX Node</span>
                                    </a>
                                                                    </div>
                                <div class="navbar-wrap main-menu d-none d-lg-flex">
                                    <ul class="navigation">
                                                                                <li><a href="/">首页</a></li>
                                                                                <li><a href="/free-nodes/">免费节点</a></li>
                                                                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                                <li><a href="/news/">新闻资讯</a></li>
                                                                                <li><a href="#">关于</a></li>
                                        <li><a href="#">联系</a></li>
                                    </ul>
                                </div>
                            </nav>
                        </div>
                        <!-- Mobile Menu  -->
                        <div class="mobile-menu">
                            <nav class="menu-box">
                                <div class="close-btn"><i class="fas fa-times"></i></div>
                                <div class="nav-logo"><a href="/">ClashX Node</a>
                                </div>
                                <div class="menu-outer">
                                    <!--Here Menu Will Come Automatically Via Javascript / Same Menu as in Header-->
                                </div>
                                <div class="social-links">
                                    <ul class="clearfix">
                                        <li><a href="#"><span class="fab fa-twitter"></span></a></li>
                                        <li><a href="#"><span class="fab fa-facebook-square"></span></a></li>
                                        <li><a href="#"><span class="fab fa-pinterest-p"></span></a></li>
                                        <li><a href="#"><span class="fab fa-instagram"></span></a></li>
                                        <li><a href="#"><span class="fab fa-youtube"></span></a></li>
                                    </ul>
                                </div>
                            </nav>
                        </div>
                        <div class="menu-backdrop"></div>
                        <!-- End Mobile Menu -->
                    </div>
                </div>
            </div>
        </div>
        <!-- header-search -->
        <div class="search-popup-wrap" tabindex="-1" role="dialog" aria-hidden="true">
            <div class="search-close">
                <span><i class="fas fa-times"></i></span>
            </div>
            <div class="search-wrap text-center">
                <div class="container">
                    <div class="row">
                        <div class="col-12">
                            <h2 class="title">... Search Here ...</h2>
                            <div class="search-form">
                                <form action="#">
                                    <input type="text" name="search" placeholder="Type keywords here">
                                    <button class="search-btn"><i class="fas fa-search"></i></button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- header-search-end -->
    </header>
    <!-- header-area-end -->
    <!-- main-area -->
    <main>
        <!-- breadcrumb-area -->
        <section class="breadcrumb-area breadcrumb-bg" data-background="/assets/website/img/clashxnode/bg/breadcrumb_bg.jpg">
            <div class="container">
                <div class="container-inner-wrap">
                    <div class="row">
                        <div class="col-12">
                            <div class="breadcrumb-content">
                                <h1 class="title">vuex配置项、多组件数据共享案例详解</h1>
                                <nav aria-label="breadcrumb">
                                    <ol class="breadcrumb">
                                        <li class="breadcrumb-item"><a href="/">首页</a></li>
                                        <li class="breadcrumb-item"><a href="/news/">新闻资讯</a></li>
                                        <li class="breadcrumb-item active" aria-current="page">正文</li>
                                    </ol>
                                </nav>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <!-- breadcrumb-area-end -->
        <!-- customer-feedback -->
        <section class="customer-feedback-area">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                          				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <div class="toc"> <h3>文章目录</h3> <ul> <li><a href="#getters__2" rel="nofollow">getters 配置项</a></li> <li><a href="#mapStatemapGetters_46" rel="nofollow">mapState、mapGetters</a></li> <li><a href="#mapActionsmapMutations_124" rel="nofollow">mapActions、mapMutations</a></li> <li><a href="#_174" rel="nofollow">多组件共享数据</a></li> </ul> </div> <p> 没有看过上一篇的同学可以查看：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/u010356768/article/details/124136398"  rel="nofollow">Vue Vuex学习(搭建vuex环境、vuex求和案例)</a></p> </h1> <p><strong>index.js</strong> 中增加 getters 配置项</p> <pre><code class="prism language-js"><span class="token comment">//准备getters，用于将state中的数据进行加工</span><span class="token keyword">const</span> getters<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token function">bigSum</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span> state<span class="token punctuation">.</span>sum<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">//创建并暴露store</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token keyword">new</span><span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span><span class="token operator">...</span><span class="token operator">...</span>     getters<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p><strong>Count.vue</strong> 中使用</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>当前求和10倍为：{<!-- -->{$store.getters.bigSum}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220607/4903191c1d43bf651694443206693635.jpg" alt="vuex配置项、多组件数据共享案例详解"><br /><strong>总结</strong><br /> 1.概念：当 state 中的数据需要经过加工后再使用时，可以使用 getters 加工<br /> 2.在<code>store.js</code>中追加<code>getters</code> 配置</p> <pre><code class="prism language-js"><span class="token comment">//准备getters，用于将state中的数据进行加工</span><span class="token keyword">const</span> getters<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token function">bigSum</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span> state<span class="token punctuation">.</span>sum<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">//创建并暴露store</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token keyword">new</span><span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span><span class="token operator">...</span><span class="token operator">...</span>     getters<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p>3.组件中读取数据：<code>$store.getters.bigSum</code></p> </h1> <p>首先引入问题。我们在 index.js 中增加学校和学科字段</p> <pre><code class="prism language-js"><span class="token keyword">const</span> state<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">sum</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token comment">//当前和</span><span class="token literal-property property">school</span><span class="token operator">:</span><span class="token string">"三里屯小学"</span><span class="token punctuation">,</span><span class="token literal-property property">subject</span><span class="token operator">:</span><span class="token string">"Vue"</span><span class="token punctuation">,</span><span class="token punctuation">}</span></code></pre> <p>Count.vue 中使用</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>当前求和为：{<!-- -->{$store.state.sum}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>当前求和10倍为：{<!-- -->{$store.getters.bigSum}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>我在：{<!-- -->{$store.state.school}}学习{<!-- -->{$store.state.subject}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span></code></pre> <p>查看下当前效果：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220607/a8e3e5441375a2dbc196a9ff914dec94.jpg" alt="vuex配置项、多组件数据共享案例详解"><br /> 我们发现每次取值时都是<code>store.state.xxx</code>或者<code>$store.getters.xxx</code>，太长了，有的同学想到了写计算属性来简化</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>当前求和为：{<!-- -->{he}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>当前求和10倍为：{<!-- -->{$store.getters.bigSum}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>我在：{<!-- -->{xuexiao}}学习{<!-- -->{xueke}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>  computed:{     he(){       return this.$store.state.sum     },     xuexiao(){       return this.$store.state.school     },     xueke(){       return this.$store.state.subject     }   }</code></pre> <p>当然可以使用要学习的这个<code>mapState</code></p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>当前求和为：{<!-- -->{he}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>当前求和10倍为：{<!-- -->{$store.getters.bigSum}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>我在：{<!-- -->{xuexiao}}学习{<!-- -->{xueke}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span> 	computed:{     	//借助mapstate生成计算属性，从state中读取数据（对象写法）     	...mapState({he:"sum",xuexiao:"school",xueke:"subject"})     	//或者     	//借助mapstate生成计算属性，从state中读取数据（数组写法）    		...mapState(['sum','school',"subject"])   	},</code></pre> <p>其中…这里是 ES6 的语法，举个例子</p> <pre><code class="prism language-js"><span class="token keyword">let</span> obj1<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">}</span><span class="token keyword">let</span> obj2<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">...</span>obj1<span class="token punctuation">,</span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">}</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220607/7bb05e93e5adf2c42ccda763b7632a09.jpg" alt="vuex配置项、多组件数据共享案例详解"><br /> 所以<code>...mapState({he:"sum",xuexiao:"school",xueke:"subject"})</code>就相当于我们在 computed 中增加了开始写的那一堆方法</p> <p>同样 mapGetters</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>当前求和10倍为：{<!-- -->{ bigSum }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>  computed: {    ......     //...mapGetters({bigSum:'bigSum'})     ...mapGetters(['bigSum'])   },</code></pre> </h1> <p>mapMutations 对象写法</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>increment(n)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>decrement(n)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>-<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>  	methods: {     /*increment() {       this.$store.commit("JIA", this.n);     },     decrement() {       this.$store.commit("JIAN", this.n);     },*/     ...mapMutations({"increment":"JIA","decrement":"JIAN"}),    ......   }</code></pre> <p>mapMutations 数组写法</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>JIA(n)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>JIAN(n)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>-<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>  	//借助 mapMutations 生成对用的方法，方法中会调用 commit去联系mutations(数组写法)     ...mapMutations(["JIA","JIAN"]),</code></pre> <p>数组的这种写法意思是生成方法名为 JIA，commit 的方法名也为 JIA 才能这样写，所以调用时，我们方法名要写 JIA，同样的也要把参数传进去<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220607/c9b1790a7b9c8d7d9c1ef414c2152e24.jpg" alt="vuex配置项、多组件数据共享案例详解"><br /> mapAtions 对象写法</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>incrementOdd(n)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>当前和为奇数再加<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>incrementWait(n)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>等一等再加<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>      methods:{ 	//借助 mapActions 生成对用的方法，方法中会调用 dispatch 去联系 actions(对象写法) 	...mapActions({incrementOdd:"jiaOdd",incrementWait:"jiaWait"}) }</code></pre> <p>mapAtions 数组写法</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jiaOdd(n)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>当前和为奇数再加<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jiaWait(n)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>等一等再加<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>     methods:{ 	//借助 mapActions 生成对用的方法，方法中会调用 dispatch 去联系 actions(数组写法)     ...mapActions(["jiaOdd","jiaWait"])     }</code></pre> </h1> <p>现在再写一个 Person 组件，展示人员信息。要完成 Person 组件展示刚才 Count 组件中的 sum 值。而 Count 组件展示人员信息</p> <p>我们首先完成 Person 组件的人员展示和添加。首先在 index.js 中的 state 中存入<code>personList</code> 做为要展示的人员数据。然后在 Person.vue 中使用<code>v-for</code> 循环出人员数据</p> <p>然后实现添加人员方法。正常应该在 index.js 中的 actions 写方法，然后 commit 给 mutations，但是因为逻辑比较简单，所以我们直接在 mutations 中写一个添加人员的方法<code>ADD_PERSON</code>，然后在 Person.vue 中使用<code>this.$store.commit</code>提交添加的人员数据即可。先看效果：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220607/422ece0b29d05848f0f3b01c6a754932.jpg" alt="vuex配置项、多组件数据共享案例详解"></p> <p>完整代码如下(仅展示改动的代码)：</p> <p><strong>index.js</strong></p> <pre><code class="prism language-js"><span class="token operator">...</span><span class="token operator">...</span><span class="token comment">//准备mutations；用于操作数据（state）</span><span class="token keyword">const</span> mutations<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token operator">...</span><span class="token operator">...</span><span class="token constant">ADD_PERSON</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span>value</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"mutations中的ADD_PERSON被调用了"</span><span class="token punctuation">,</span>state<span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>         state<span class="token punctuation">.</span>personList<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">//准备state；用于存储数据</span><span class="token keyword">const</span> state<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token operator">...</span><span class="token operator">...</span><span class="token literal-property property">personList</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">id</span><span class="token operator">:</span><span class="token string">"001"</span><span class="token punctuation">,</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">"张三"</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">id</span><span class="token operator">:</span><span class="token string">"002"</span><span class="token punctuation">,</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">"李四"</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token operator">...</span><span class="token operator">...</span></code></pre> <p><strong>Person.vue</strong></p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>category<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>人员信息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span><span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入名字<span class="token punctuation">"</span></span><span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>add<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>添加<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>person in personList<span class="token punctuation">"</span></span><span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>person.id<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>{<!-- -->{person.name}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span>nanoid<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">"nanoid"</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">"Person"</span><span class="token punctuation">,</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">{<!-- --></span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">const</span> personObj<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">id</span><span class="token operator">:</span><span class="token function">nanoid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">"ADD_PERSON"</span><span class="token punctuation">,</span>personObj<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">computed</span><span class="token operator">:</span><span class="token punctuation">{<!-- --></span><span class="token function">personList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>personList<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"><span class="token selector">select, button</span><span class="token punctuation">{<!-- --></span><span class="token property">margin-right</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span></code></pre> <p>App.vue 中引入组件并使用</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Count</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Person</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">import</span> Count<span class="token keyword">from</span><span class="token string">"@/components/Count"</span><span class="token punctuation">;</span><span class="token keyword">import</span> Person<span class="token keyword">from</span><span class="token string">"@/components/Person"</span><span class="token punctuation">;</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'App'</span><span class="token punctuation">,</span><span class="token literal-property property">components</span><span class="token operator">:</span><span class="token punctuation">{<!-- --></span>Count<span class="token punctuation">,</span>Person<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span></code></pre> <p>下面实现数据共享，我们让 Count 组件展示 Person 组件中总人数，Person 组件展示 Count 组件的求和数</p> <p>修改 Count 组件</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span> red</span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>Person组件的总人数为{<!-- -->{personList.length}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token operator">...</span><span class="token operator">...</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token punctuation">{<!-- --></span><span class="token operator">...</span><span class="token operator">...</span><span class="token literal-property property">computed</span><span class="token operator">:</span><span class="token punctuation">{<!-- --></span><span class="token operator">...</span><span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'sum'</span><span class="token punctuation">,</span><span class="token string">'school'</span><span class="token punctuation">,</span><span class="token string">"subject"</span><span class="token punctuation">,</span><span class="token string">"personList"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token operator">...</span><span class="token operator">...</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></code></pre> <p>修改 Person 组件</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span> red</span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>Count组件求和为{<!-- -->{sum}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token operator">...</span><span class="token operator">...</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token punctuation">{<!-- --></span><span class="token operator">...</span><span class="token operator">...</span><span class="token literal-property property">computed</span><span class="token operator">:</span><span class="token punctuation">{<!-- --></span><span class="token operator">...</span><span class="token operator">...</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>sum<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></code></pre> <p>查看效果：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220607/f59590800569f717e090583a9d8fc0d7.jpg" alt="vuex配置项、多组件数据共享案例详解"></p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-22742.htm">被猫咬了怎么确定没事（被猫咬了怎么判断有没有事）</a></p>
                                        <p>下一个：<a href="/news/article-23201.htm">宠物品牌名称设计（宠物品牌名称设计图）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-12-7-clash-windows.htm" title="「12月7日」最高速度18.4M/S，2024年ClashX Node每天更新免费机场订阅节点链接">「12月7日」最高速度18.4M/S，2024年ClashX Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-22283.htm" title="让猫挠了轻微出血不***有事吗血清蛋白（被猫抓伤有一点血要打蛋白吗）">让猫挠了轻微出血不***有事吗血清蛋白（被猫抓伤有一点血要打蛋白吗）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-21-free-subscribe-node.htm" title="「9月21日」最高速度18.9M/S，2024年ClashX Node每天更新免费机场订阅节点链接">「9月21日」最高速度18.9M/S，2024年ClashX Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-22284.htm" title="动物疫苗的种类有哪些,各有什么特点呢图片（动物疫苗的种类有哪些,各有什么特点呢图片视频）">动物疫苗的种类有哪些,各有什么特点呢图片（动物疫苗的种类有哪些,各有什么特点呢图片视频）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-19-clash-meta-windows.htm" title="「11月19日」最高速度19.7M/S，2024年ClashX Node每天更新免费机场订阅节点链接">「11月19日」最高速度19.7M/S，2024年ClashX Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-16-free-subscribe-node.htm" title="「11月16日」最高速度19.8M/S，2024年ClashX Node每天更新免费机场订阅节点链接">「11月16日」最高速度19.8M/S，2024年ClashX Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-19536.htm" title="宠物领养协议书范本最新图片大全 宠物领养协议书范本最新图片大全集">宠物领养协议书范本最新图片大全 宠物领养协议书范本最新图片大全集</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-20-clash-node-daily-updates.htm" title="「11月20日」最高速度19.3M/S，2024年ClashX Node每天更新免费机场订阅节点链接">「11月20日」最高速度19.3M/S，2024年ClashX Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-30-free-clash-stash.htm" title="「9月30日」最高速度23M/S，2024年ClashX Node每天更新免费机场订阅节点链接">「9月30日」最高速度23M/S，2024年ClashX Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-28-free-high-speed-nodes.htm" title="「9月28日」最高速度22.3M/S，2024年ClashX Node每天更新免费机场订阅节点链接">「9月28日」最高速度22.3M/S，2024年ClashX Node每天更新免费机场订阅节点链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">27</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">32</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">27</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section>
        <!-- customer-feedback-end -->
    </main>
    <!-- main-area-end -->
        <!-- footer-area -->
    <footer>
        <div class="copyright-wrap">
            <div class="container">
                <div class="container-inner-wrap">
                    <div class="row align-items-center">
                        <div class="col-lg-8 col-md-9">
                            <div class="copyright-text">
                                <p>
                                    <a href="/">ClashX Node节点订阅官网</a> 版权所有 Powered by WordPress
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <!-- footer-area-end -->
    <!-- JS here -->
    <script src="/assets/website/js/frontend/clashxnode/jquery-3.6.0.min.js"></script>
    <script src="/assets/website/js/frontend/clashxnode/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/clashxnode/isotope.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/clashxnode/imagesloaded.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/clashxnode/jquery.magnific-popup.min.js"></script>
    <script src="/assets/website/js/frontend/clashxnode/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/clashxnode/jquery.odometer.min.js"></script>
    <script src="/assets/website/js/frontend/clashxnode/jquery.appear.js"></script>
    <script src="/assets/website/js/frontend/clashxnode/slick.min.js"></script>
    <script src="/assets/website/js/frontend/clashxnode/ajax-form.js"></script>
    <script src="/assets/website/js/frontend/clashxnode/wow.min.js"></script>
    <script src="/assets/website/js/frontend/clashxnode/aos.js"></script>
    <script src="/assets/website/js/frontend/clashxnode/plugins.js"></script>
    <script src="/assets/website/js/frontend/clashxnode/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>